

Algoritmo do programa principal:



	abre o arquivo (Rb)
	cria página raiz
	loop de leitura (verifica EOF)
		atualiza chave_primaria
		verifica validade da chave (8 algarismos)
		atualiza contador de leituras
		NRR recebe contador
	

		BUSCA (chave_primaria) -> retorna ponteiro para pagina
		verifica lotação da página
			a) há espaço:
				verifica posição relativa
					a1) posição mais à direita:
						insere chave_primaria
						atualiza lotação
						ponteiro à direita = NULL
					a2) outra posição (inicial ou intermediária)
						empurra chaves maiores e respectivos ponteiros
						insere chave_primaria
						atualiza lotação
						atualiza ponteiros (arrasta de volta?)
	
			b) página lotada:
				verifica páginas irmãs
					b1) existe vizinha com espaço
						REDISTRIBUIR (ponteiro_pagina_lotada, ponteiro_vizinha_receptora, chave_primaria)
					b2) ambas as vizinhas estão lotadas
						DIVIDIR (ponteiro_pagina_lotada, chave_primaria)
	
	final do loop de leitura
	
	cria arquivo INDEX
	salva árvore em INDEX
	fecha arquivo INDEX
	libera memoria		
	



definir procedure CRIAR


definir procedure BUSCAR


definir procedure REDISTRIBUIR


definir procedure DIVIDIR